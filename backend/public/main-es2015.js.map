{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/confirm/confirm.component.ts","./src/app/confirm/confirm.component.html","./src/app/corona-sign/corona-sign.component.ts","./src/app/corona-sign/corona-sign.component.html","./src/app/corona-sign/data.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\n\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n    title = 'CoronaSign';\n}\n","<div class=\"app-wrap\">\n    <app-corona-sign></app-corona-sign>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { CoronaSignComponent } from './corona-sign/corona-sign.component';\nimport { MatCardModule } from '@angular/material/card';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatInputModule } from '@angular/material/input';\nimport { HttpClientModule } from '@angular/common/http';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { ConfirmComponent } from './confirm/confirm.component';\nimport { MatDialogModule } from '@angular/material/dialog';\n\n@NgModule({\n    declarations: [AppComponent, CoronaSignComponent, ConfirmComponent],\n    imports: [\n        BrowserModule,\n        BrowserAnimationsModule,\n        MatCardModule,\n        HttpClientModule,\n        ReactiveFormsModule,\n        MatFormFieldModule,\n        MatButtonModule,\n        MatInputModule,\n        MatAutocompleteModule,\n        MatCheckboxModule,\n        MatDialogModule,\n    ],\n    providers: [],\n    bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nexport interface DialogData {\n    data: string;\n}\n@Component({\n    selector: 'app-confirm',\n    templateUrl: './confirm.component.html',\n    styleUrls: ['./confirm.component.scss'],\n})\nexport class ConfirmComponent implements OnInit {\n    constructor(\n        public dialogRef: MatDialogRef<ConfirmComponent>,\n        @Inject(MAT_DIALOG_DATA) public data: DialogData\n    ) {}\n\n    ngOnInit(): void {}\n\n    onClose() {\n        this.dialogRef.close();\n        location.reload();\n    }\n}\n","<div class=\"backdrop\" (click)=\"onClose()\"></div>\n<div class=\"confirm-box\">\n    <div class=\"confirm-message\">\n        {{ data }}\n    </div>\n    <div mat-dialog-actions class=\"confirm-box-actions\">\n        <button mat-raised-button color=\"warn\" class=\"button\" (click)=\"onClose()\">סגור</button>\n    </div>\n</div>\n","import { Component, ElementRef, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { DataService } from './data.service';\nimport { Observable } from 'rxjs';\nimport { map, startWith } from 'rxjs/operators';\nimport { DomSanitizer, SafeUrl } from '@angular/platform-browser';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ConfirmComponent } from '../confirm/confirm.component';\n\n@Component({\n    selector: 'app-corona-sign',\n    templateUrl: './corona-sign.component.html',\n    styleUrls: ['./corona-sign.component.scss'],\n})\nexport class CoronaSignComponent implements OnInit {\n    signForm: FormGroup;\n    employees = [];\n    isloading: boolean;\n    names = [];\n    filteredOptions: Observable<string[]>;\n    selectedEmp = {};\n    idNumber = '';\n\n    constructor(\n        private formBuilder: FormBuilder,\n        private el: ElementRef,\n        private dataService: DataService,\n        public dialog: MatDialog\n    ) {}\n\n    ngOnInit(): void {\n        this.isloading = true;\n        this.signForm = this.formBuilder.group({\n            fullName: [null, [Validators.required, Validators.minLength(2)]],\n            employeeId: [null, [Validators.required, Validators.minLength(7)]],\n            signature: [null, [Validators.required]],\n        });\n        this.dataService.getEmployees().subscribe((response) => {\n            response.forEach((item) => {\n                const emp = {\n                    fullName: `${item.fullName}`,\n                    idNumber: item.idNumber,\n                    signature: false,\n                };\n                this.employees.push(emp);\n                this.names.push(emp.fullName);\n            });\n            this.filteredOptions = this.formControls.fullName.valueChanges.pipe(\n                startWith(''),\n                map((value) => this._filter(value))\n            );\n            this.isloading = false;\n        });\n    }\n\n    setIdNumber(name) {\n        this.selectedEmp = this.employees.filter((item) => {\n            return name === `${item.fullName}`;\n        });\n        this.idNumber = this.selectedEmp[0].idNumber;\n        this.formControls.employeeId.setValue(this.idNumber);\n        this.selectedEmp = this.selectedEmp[0];\n    }\n\n    private _filter(value: string): string[] {\n        const filterValue = value.toLowerCase();\n\n        return this.names.filter((option) =>\n            option.toLowerCase().includes(filterValue)\n        );\n    }\n\n    setSignature() {\n        this.selectedEmp['signature'] = true;\n    }\n\n    onSign(): void {\n        this.isloading = true;\n        const data: FormData = new FormData();\n        Object.keys(this.selectedEmp).forEach((key) => {\n            data.append(key, this.selectedEmp[key]);\n        });\n\n        this.dataService\n            .addSignature(this.selectedEmp)\n            .subscribe((response) => {\n                this.dialog.open(ConfirmComponent, {\n                    height: '200px',\n                    width: '200px',\n                    data: 'תודה, יום טוב!',\n                });\n                // this.signForm.reset();\n                this.isloading = false;\n            });\n    }\n\n    get formControls() {\n        return this.signForm.controls;\n    }\n}\n","<div class=\"corona-sign-wrap\">\n    <div class=\"panda-logo\">\n        <img class=\"panda-logo\" src=\"../../assets/images/panda-logo-1920.png\" alt=\"#\"/>\n    </div>\n\n    <mat-card class=\"form-container\">\n        <div class=\"form-title\">\n            <div>טופס הצהרת קורונה</div>\n        </div>\n\n        <div class=\"form-info-text\">\n            <ul>\n                <li>\n                    אני מצהיר/ה כי ערכתי היום בדיקה למדידת חום גוף, בה נמצא כי חום גופי אינו עולה על\n                    38 מעלות צלסיוס וכי לא היה לי חום כאמור בשבוע האחרון.\n                </li>\n                <li>\n                    אני מצהיר/ה כי לא הייתי במגע קרוב עם חולה קורונה בשבועיים האחרונים.\n                </li>\n                <li>\n                    אני מצהיר/ה כי אנני משתעל/ת וכן כי אין לי קשיים בנשימה.\n                    <span>(למעט שיעול או קושי בנשימה הנובע ממצב כרוני כגון אסטמה או אלרגיה אחרת)</span>\n                </li>\n                <li>אני מתחייב/ת לשמור מרחק של לפחות 2 מטרים ביני לבין אדם אחר במקום העבודה.</li>\n                <li>ידוע לי כי בעט שימוש במעלית, לא ישהו בה יותר מ2 נוסעים בו-זמנית.</li>\n                <li>אני מצהיר/ה כי הוקצע לי ציוד אישי קבוע ובכלל מקלדת, עכבר, טלפון קווי.<br>\n                    אני מתחייב/ת שלא לעשות שימוש בציוד אישי של עובד/ת אחר/ת\n                </li>\n                <li>אני מתחייב/ת לחבוש מסיכה במקום העבודה בכל עת.</li>\n                <li>אני מצהיר/ה כי לא הייתי במגע עם חולה קורונה בשבועיים האחרונים.</li>\n            </ul>\n        </div>\n        <div class=\"form-wrap\">\n            <form [formGroup]=\"signForm\" class=\"form\">\n                <div class=\"inputs\">\n                    <div class=\"form-group form-group-first-child\">\n                        <mat-form-field class=\"field-full-width\">\n                            <mat-label *ngIf=\"isloading\" >טוען...</mat-label>\n                            <mat-label *ngIf=\"!isloading\">שם מלא</mat-label>\n                            <input\n                                matInput\n                                type=\"text\"\n                                formControlName=\"fullName\"\n                                name=\"fullName\"\n                                placeholder=\"שם מלא\"\n                                autocomplete=\"off\"\n                                [matAutocomplete]=\"auto\"\n                            />\n                            <mat-autocomplete\n                                #auto=\"matAutocomplete\">\n                                <mat-option #selectedName\n                                            (click)=\"setIdNumber(selectedName.value)\"\n                                            *ngFor=\"let name of filteredOptions | async\" [value]=\"name\">\n                                    {{name}}\n                                </mat-option>\n                            </mat-autocomplete>\n                        </mat-form-field>\n\n                    </div>\n                    <div class=\"form-group\">\n                        <mat-form-field class=\"field-full-width\">\n                            <mat-label>תעודת זהות</mat-label>\n                            <input\n                                matInput\n                                type=\"text\"\n                                id=\"employeeId\"\n                                formControlName=\"employeeId\"\n                                name=\"employeeId\"\n                                placeholder=\"תעודת זהות\"\n                            />\n                        </mat-form-field>\n                    </div>\n                </div>\n                <div class=\"form-group\">\n                    <mat-checkbox\n                        formControlName=\"signature\"\n                        (click)=\"setSignature()\"\n                        class=\"checkbox-approve\" color=\"primary\">אני מאשר/ת כי קראתי ומתחייב לפעול לפי ההנחיות הנ''ל</mat-checkbox>\n                </div>\n                <div class=\"sign-buttons\">\n                    <button\n                        mat-raised-button\n                        class=\"sign-button\"\n                        [ngClass]=\"signForm.valid ? 'active' : ''\"\n                        [disabled]=\"!signForm.valid\"\n                        type=\"submit\"\n                        (click)=\"onSign()\">\n                        שלח\n                    </button>\n                </div>\n            </form>\n        </div>\n    </mat-card>\n</div>\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { environment as env } from '../../environments/environment';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class DataService {\n    constructor(private http: HttpClient) {}\n\n    getEmployees(): Observable<any> {\n        return this.http.get(`${env.backendEndpoint}/employees`);\n    }\n\n    addSignature(data): Observable<any> {\n        // console.log(data);\n        return this.http.post(`${env.backendEndpoint}/signature`, data, {});\n    }\n\n    getSignatures() {\n        return this.http.get(`${env.backendEndpoint}/signatures`, {\n            responseType: 'blob',\n        });\n    }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n    production: false,\n    backendEndpoint: 'https://corona-sign-app.herokuapp.com',\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}